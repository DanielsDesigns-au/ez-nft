/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EzNFTMarket, EzNFTMarketInterface } from "../EzNFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    name: "MarketNFTCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createMarketNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct EzNFTMarket.MarketNFT[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserMintedNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct EzNFTMarket.MarketNFT[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nftId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct EzNFTMarket.MarketNFT[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "sellMarketNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526658d15e1762800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611931806100746000396000f3fe6080604052600436106100555760003560e01c806312e855851461005a5780635e6e4db3146100855780636c84508f146100b05780638b66f744146100cc578063c0483105146100f7578063fdc5ab8e14610113575b600080fd5b34801561006657600080fd5b5061006f61013e565b60405161007c9190611668565b60405180910390f35b34801561009157600080fd5b5061009a610148565b6040516100a791906115c6565b60405180910390f35b6100ca60048036038101906100c59190611302565b610474565b005b3480156100d857600080fd5b506100e16107de565b6040516100ee91906115c6565b60405180910390f35b610111600480360381019061010c91906112c6565b610b8e565b005b34801561011f57600080fd5b50610128610e47565b60405161013591906115c6565b60405180910390f35b6000600454905090565b6060600061015660016111f7565b9050600061016460026111f7565b61016e60016111f7565b6101789190611723565b90506000808267ffffffffffffffff8111156101bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156101f657816020015b6101e361121b565b8152602001906001900390816101db5790505b50905060005b8481101561046957600073ffffffffffffffffffffffffffffffffffffffff166005600060018461022d91906116cd565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104565760006005600060018461028e91906116cd565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110610439577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018190525060018561045191906116cd565b945050505b8080610461906117b1565b9150506101fc565b508094505050505090565b600260005414156104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b190611648565b60405180910390fd5b600260008190555066b1a2bc2ec50000811161050b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610502906115e8565b60405180910390fd5b600454341461054f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054690611608565b60405180910390fd5b6105596001611205565b600061056560016111f7565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016107469392919061154a565b600060405180830381600087803b15801561076057600080fd5b505af1158015610774573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff16827f6cedd610d1daf5b652840dc5e646af8a945af7d7f89c7585640f6b6e6636b28f3360008760006040516107c89493929190611581565b60405180910390a4506001600081905550505050565b606060006107ec60016111f7565b905060008060005b83811015610895573373ffffffffffffffffffffffffffffffffffffffff166005600060018461082491906116cd565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108825760018361087f91906116cd565b92505b808061088d906117b1565b9150506107f4565b5060008267ffffffffffffffff8111156108d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561091157816020015b6108fe61121b565b8152602001906001900390816108f65790505b50905060005b84811015610b83573373ffffffffffffffffffffffffffffffffffffffff166005600060018461094791906116cd565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b70576000600560006001846109a891906116cd565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050848681518110610b53577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181905250600185610b6b91906116cd565b945050505b8080610b7b906117b1565b915050610917565b508094505050505090565b60026000541415610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611648565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610c54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4b90611628565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610cd0573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b8152600401610d0e9392919061154a565b600060405180830381600087803b158015610d2857600080fd5b505af1158015610d3c573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff021916908315150217905550610dce6002611205565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610e38573d6000803e3d6000fd5b50505060016000819055505050565b60606000610e5560016111f7565b905060008060005b83811015610efe573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610e8d91906116cd565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610eeb57600183610ee891906116cd565b92505b8080610ef6906117b1565b915050610e5d565b5060008267ffffffffffffffff811115610f41577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610f7a57816020015b610f6761121b565b815260200190600190039081610f5f5790505b50905060005b848110156111ec573373ffffffffffffffffffffffffffffffffffffffff1660056000600184610fb091906116cd565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111d95760006005600060018461101191906116cd565b81526020019081526020016000206000015490506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250508486815181106111bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001856111d491906116cd565b945050505b80806111e4906117b1565b915050610f80565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b6000813590506112ab816118cd565b92915050565b6000813590506112c0816118e4565b92915050565b600080604083850312156112d957600080fd5b60006112e78582860161129c565b92505060206112f8858286016112b1565b9150509250929050565b60008060006060848603121561131757600080fd5b60006113258682870161129c565b9350506020611336868287016112b1565b9250506040611347868287016112b1565b9150509250925092565b600061135d838361149e565b60e08301905092915050565b61137281611769565b82525050565b61138181611757565b82525050565b61139081611757565b82525050565b60006113a182611693565b6113ab81856116ab565b93506113b683611683565b8060005b838110156113e75781516113ce8882611351565b97506113d98361169e565b9250506001810190506113ba565b5085935050505092915050565b6113fd8161177b565b82525050565b61140c8161177b565b82525050565b600061141f6019836116bc565b915061142a82611829565b602082019050919050565b6000611442601e836116bc565b915061144d82611852565b602082019050919050565b60006114656017836116bc565b91506114708261187b565b602082019050919050565b6000611488601f836116bc565b9150611493826118a4565b602082019050919050565b60e0820160008201516114b4600085018261152c565b5060208201516114c76020850182611378565b5060408201516114da604085018261152c565b5060608201516114ed6060850182611369565b5060808201516115006080850182611369565b5060a082015161151360a085018261152c565b5060c082015161152660c08501826113f4565b50505050565b611535816117a7565b82525050565b611544816117a7565b82525050565b600060608201905061155f6000830186611387565b61156c6020830185611387565b611579604083018461153b565b949350505050565b60006080820190506115966000830187611387565b6115a36020830186611387565b6115b0604083018561153b565b6115bd6060830184611403565b95945050505050565b600060208201905081810360008301526115e08184611396565b905092915050565b6000602082019050818103600083015261160181611412565b9050919050565b6000602082019050818103600083015261162181611435565b9050919050565b6000602082019050818103600083015261164181611458565b9050919050565b600060208201905081810360008301526116618161147b565b9050919050565b600060208201905061167d600083018461153b565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006116d8826117a7565b91506116e3836117a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611718576117176117fa565b5b828201905092915050565b600061172e826117a7565b9150611739836117a7565b92508282101561174c5761174b6117fa565b5b828203905092915050565b600061176282611787565b9050919050565b600061177482611787565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117bc826117a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117ef576117ee6117fa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5072696365206d757374206265203e302e303520657468657200000000000000600082015250565b7f5072696365206d75737420657175616c206c697374696e672070726963650000600082015250565b7f506c65617365207061792061736b696e67207072696365000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6118d681611757565b81146118e157600080fd5b50565b6118ed816117a7565b81146118f857600080fd5b5056fea264697066735822122079373781ec8802bdd712bbc332ecf43ea91e0fa7f7871f374ef004e152deba2c64736f6c63430008040033";

type EzNFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EzNFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EzNFTMarket__factory extends ContractFactory {
  constructor(...args: EzNFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EzNFTMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EzNFTMarket> {
    return super.deploy(overrides || {}) as Promise<EzNFTMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EzNFTMarket {
    return super.attach(address) as EzNFTMarket;
  }
  connect(signer: Signer): EzNFTMarket__factory {
    return super.connect(signer) as EzNFTMarket__factory;
  }
  static readonly contractName: "EzNFTMarket";
  public readonly contractName: "EzNFTMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EzNFTMarketInterface {
    return new utils.Interface(_abi) as EzNFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EzNFTMarket {
    return new Contract(address, _abi, signerOrProvider) as EzNFTMarket;
  }
}
